name: Build
on: [push]
jobs:
  build-mac:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action
      with: 
        modules: qtserialport qtquickcontrols2 
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build
      run: |
        mkdir build
        cd build
        qmake CONFIG+=release ../
        make -j2
    - name: Bundle
      run: |
        cd build
        mkdir -p guitar-configurator.app/Contents/MacOS/binaries
        mkdir -p guitar-configurator.app/Contents/MacOS/Frameworks
        cp -rf ../binaries/mac/* guitar-configurator.app/Contents/MacOS/binaries
        cp -rf ../binaries/mac/* guitar-configurator.app/Contents/MacOS/Frameworks
        cp -rf firmware guitar-configurator.app/Contents/MacOS
        macdeployqt guitar-configurator.app -dmg -qmldir=../
        mkdir artifacts
        mv guitar-configurator*.dmg* artifacts/guitar-configurator-macOS.dmg
    - uses: actions/upload-artifact@v1
      with:
        name: mac
        path: build/artifacts
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-16.04
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action
      with: 
        modules: qtserialport qtquickcontrols2 
    - name: Install libraries
      run: sudo apt-get install libxkbcommon-x11-0
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build
      run: |
        mkdir build
        cd build
        qmake CONFIG+=release PREFIX=/usr ../
        make -j$(nproc)
        make INSTALL_ROOT=../appdir -j$(nproc) install ; find ../appdir/
    - name: Bundle
      run: |
        cd build
        wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
        chmod a+x linuxdeployqt-continuous-x86_64.AppImage
        ./linuxdeployqt-continuous-x86_64.AppImage ../appdir/usr/share/applications/*.desktop -appimage -qmldir=../ 
        mkdir artifacts
        mv Guitar_Configurator*.AppImage* artifacts/guitar-configurator-linux.AppImage
    - uses: actions/upload-artifact@v1
      with:
        name: linux
        path: build/artifacts
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action
      with: 
        modules: qtserialport qtquickcontrols2 
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        qmake -config release -tp vc -spec win32-msvc guitar-configurator.pro
        msbuild guitar-configurator.vcxproj /t:Build /p:Configuration=Release
      shell: cmd
    - name: Bundle
      run: |
        mkdir deploy
        xcopy firmware /O/X/E/H/K/I deploy\firmware
        xcopy binaries\win /O/X/E/H/K/I deploy\binaries
        cp release\guitar-configurator.exe deploy
        windeployqt deploy\guitar-configurator.exe -qmldir=.
        xcopy /O/X/E/H/K/I deploy installer\packages\net.tangentmc.guitar_configurator\data
        mkdir artifacts
        python -m aqt tool windows tools_ifw 3.2.0 qt.tools.ifw.32
        powershell -Command "(gc installer\config\config.xml) -replace '1.0.0', (gc firmwares\version) | Out-File -encoding ASCII myFile.txt"
        .\Tools\QtInstallerFramework\3.2\bin\binarycreator -c installer\config\config.xml -p installer\packages artifacts\guitar-configurator-win.exe
      shell: cmd
    - uses: actions/upload-artifact@v1
      with:
        name: windows
        path: artifacts
  release:
    if: contains(github.ref, 'tags/v')
    name: Release Build
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    steps:
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v1
        with:
          name: windows 
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v1
        with:
          name: mac  
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v1
        with:
          name: linux  
      - name: Append version to release
        run: |
          mv ./windows/*.exe ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
          mv ./mac/*.dmg ./mac/guitar-configurator-mac-${GITHUB_REF##*/}.dmg
          mv ./linux/*.AppImage ./linux/guitar-configurator-linux-${GITHUB_REF##*/}.AppImage
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./windows/*.exe
            ./mac/*.dmg
            ./linux/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}