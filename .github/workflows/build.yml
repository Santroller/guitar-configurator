name: Build
on: [push]
jobs:
  build-mac:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - name: codesign
        id: codesign
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          keychain: certs
      - name: Enable Certs
        run: |
          security unlock-keychain -p "${{ steps.codesign.outputs.keychain-password }}" /Users/runner/Library/Keychains/certs.keychain-db
      - name: Install Libs
        run: |
          npm i -g appdmg
          brew install pkgconfig
          brew install hidapi
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCache-${{ runner.os }}-5.12.8
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.6.3
        with: 
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: qtserialport qtquickcontrols2 
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Build QtUsb
        run: |
          cd submodules/QtUsb
          mkdir build && cd build
          qmake INCLUDEPATH+=/usr/local/Cellar/libusb/1.0.23/include CONFIG+=qtusb-static ..
          make install
      - name: Build
        run: |
          mkdir build
          cd build
          mkdir -p guitar-configurator.app/Contents/MacOS
          cmake ../
          make -j$(sysctl -n hw.logicalcpu)
      - name: Bundle
        run: |
          cd build
          mkdir -p guitar-configurator.app/Contents/MacOS/binaries
          mkdir -p guitar-configurator.app/Contents/MacOS/Frameworks
          cp -rf binaries guitar-configurator.app/Contents/MacOS
          cp -rf binaries/* guitar-configurator.app/Contents/MacOS/Frameworks
          cp -rf *.json guitar-configurator.app/Contents/MacOS
          cp -rf firmware guitar-configurator.app/Contents/MacOS
          macdeployqt guitar-configurator.app -qmldir=../
          codesign --entitlements ../entitlements.xml -s "guitar-configurator" "guitar-configurator.app" --deep
          mkdir artifacts
          cp ../appdmg.json .
          cp ../icon.icns .
          cp ../dmg-background.png .
          appdmg appdmg.json artifacts/guitar-configurator-macOS.dmg
          codesign --entitlements ../entitlements.xml -s "guitar-configurator" "artifacts/guitar-configurator-macOS.dmg" --deep
      - uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/artifacts
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-16.04
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCache-${{ runner.os }}-5.12.8
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.6.3
        with: 
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: qtserialport qtquickcontrols2 
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Build QtUsb
        run: |
          sudo apt-get install libprocps-dev libhidapi-hidraw0 libhidapi-dev libusb-1.0-0 libusb-1.0-0-dev
          cd submodules/QtUsb
          mkdir build && cd build
          qmake CONFIG+=qtusb-static ..
          make install
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ../ 
          make -j$(nproc)
      - name: Bundle
        run: |
          cd build
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          mkdir appdir/usr/bin
          cp guitar-configurator appdir/usr/bin
          ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/guitar-configurator.desktop -appimage -qmldir=../ -extra-plugins=iconengines,platformthemes/libqgtk3.so
          mkdir artifacts
          mv Guitar_Configurator*.AppImage* artifacts/guitar-configurator-linux.AppImage
      - uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/artifacts
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCacheTools-${{ runner.os }}-5.12.8
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.6.3
        with: 
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          modules: qtserialport qtquickcontrols2 
      - name: Install QtTools
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          python -m aqt tool windows tools_ifw 3.2.2 qt.tools.ifw.32 -O ../Qt
        shell: cmd
      - uses: actions/checkout@v1
        with:
          submodules: true
      - name: Build
        run: |
          setx HIDAPI_ROOT_DIR libraries\hidapi-win\x64
          robocopy ".\libraries\QtUsb\Qt" "..\Qt" /e
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          mkdir release
          cd release
          cmake ..\
          msbuild guitar-configurator.vcxproj /t:Build /p:Configuration=Release
        shell: cmd
      - name: Bundle
        run: |
          mkdir deploy
          robocopy ".\firmware" ".\deploy\firmware" /e
          robocopy ".\binaries\win" ".\deploy\binaries" /e
          copy release\*.json deploy
          cp release\Release\guitar-configurator.exe deploy
          windeployqt deploy\guitar-configurator.exe -qmldir=.
          robocopy ".\deploy" ".\installer\packages\net.tangentmc.guitar_configurator\data" /e
          mkdir artifacts
          powershell -Command "(gc installer\config\config.xml) -replace '1.0.0', (git describe --abbrev=0 --tags) | Out-File -encoding ASCII installer\config\config.xml"
          powershell -Command "(gc installer\packages\net.tangentmc.guitar_configurator\meta\package.xml) -replace '1.0.0', (git describe --abbrev=0 --tags) | Out-File -encoding ASCII installer\packages\net.tangentmc.guitar_configurator\meta\package.xml"
          powershell -Command "(gc installer\packages\net.tangentmc.guitar_configurator\meta\package.xml) -replace '2010-09-21', (Get-Date -Format "yyy-MM-dd") | Out-File -encoding ASCII installer\packages\net.tangentmc.guitar_configurator\meta\package.xml"
          ..\Qt\Tools\QtInstallerFramework\3.2\bin\binarycreator -c installer\config\config.xml -p installer\packages artifacts\guitar-configurator-win.exe -f
          ..\Qt\Tools\QtInstallerFramework\3.2\bin\repogen -p installer\packages artifacts\repository
        shell: cmd
      - uses: actions/upload-artifact@v1
        with:
          name: windows
          path: artifacts
  release:
    if: contains(github.ref, 'tags/v')
    name: Release Build
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v1
        with:
          name: windows
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v1
        with:
          name: mac  
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v1
        with:
          name: linux  
      - name: Append version to release
        run: |
          mv ./windows/*.exe ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
          mv ./mac/*.dmg ./mac/guitar-configurator-mac-${GITHUB_REF##*/}.dmg
          mv ./linux/*.AppImage ./linux/guitar-configurator-linux-${GITHUB_REF##*/}.AppImage
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./windows/*.exe
            ./mac/*.dmg
            ./linux/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup windows directory for pages
        run: |
          rm ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
      - uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          SINGLE_COMMIT: true
          CLEAN: true
          CLEAN_EXCLUDE: '["_includes","_layouts","_sass","assets","screenshots",".env",".gitignore","*.html","*.md","Gemfile","Gemfile.lock","_config.yml","adaptor.jpg"]'
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: windows 