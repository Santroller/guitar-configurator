import * as _ from 'c-struct';
import { DeviceType, EepromConfig, OutputType, InputType, TiltSensor, Subtype, GyroOrientation, PinConstants } from '../common/avr-types';
export const EepromSchema = {
   version: _.type.uint8_t,
   output_type: _.type.uint8_t,
   input_type: _.type.uint8_t,
   tilt_type: _.type.uint8_t,
   subtype: _.type.uint8_t,
   pollrate: _.type.uint8_t,
   pins: {
      up: _.type.uint8_t,
      down: _.type.uint8_t,
      left: _.type.uint8_t,
      right: _.type.uint8_t,
      start: _.type.uint8_t,
      back: _.type.uint8_t,
      left_stick: _.type.uint8_t,
      right_stick: _.type.uint8_t,
      LB: _.type.uint8_t,
      RB: _.type.uint8_t,
      home: _.type.uint8_t,
      unused: _.type.uint8_t,
      a: _.type.uint8_t,
      b: _.type.uint8_t,
      x: _.type.uint8_t,
      y: _.type.uint8_t,
      lt: _.type.uint8_t,
      rt: _.type.uint8_t,
      l_x: _.type.uint8_t,
      l_y: _.type.uint8_t,
      r_x: _.type.uint8_t,
      r_y: _.type.uint8_t,
      mpu_6050_interrupt: _.type.uint8_t,
   },
   mpu_6050_orientation: _.type.uint16_t,
   frets_led_mode: _.type.bool,
   map_joy_to_dpad: _.type.bool,
   inversions: {
      lt: _.type.bool,
      rt: _.type.bool,
      l_x: _.type.bool,
      l_y: _.type.bool,
      r_x: _.type.bool,
      r_y: _.type.bool,
   },
   threshold_trigger: _.type.uint16_t,
   threshold_joy: _.type.uint16_t,
   keys: {
      up: _.type.uint8_t,
      down: _.type.uint8_t,
      left: _.type.uint8_t,
      right: _.type.uint8_t,
      start: _.type.uint8_t,
      back: _.type.uint8_t,
      left_stick: _.type.uint8_t,
      right_stick: _.type.uint8_t,
      LB: _.type.uint8_t,
      RB: _.type.uint8_t,
      home: _.type.uint8_t,
      a: _.type.uint8_t,
      b: _.type.uint8_t,
      x: _.type.uint8_t,
      y: _.type.uint8_t,
      lt: _.type.uint8_t,
      rt: _.type.uint8_t,
      l_x: {
         neg: _.type.uint8_t,
         pos: _.type.uint8_t,
      },
      l_y: {
         neg: _.type.uint8_t,
         pos: _.type.uint8_t,
      },
      r_x: {
         neg: _.type.uint8_t,
         pos: _.type.uint8_t,
      },
      r_y: {
         neg: _.type.uint8_t,
         pos: _.type.uint8_t,
      },
   },
   cpu_freq: _.type.uint32_t,
   signature: _.type.uint32_t,
};

export const defaultConfig: EepromConfig = {
   version: 0,
   output_type: OutputType.XInput,
   input_type: InputType.Direct,
   tilt_type: TiltSensor.MPU6050,
   subtype: Subtype.Guitar,
   pollrate: 1,
   pins: {
      up: 14,
      down: 15,
      left: PinConstants.InvalidPin,
      right: PinConstants.InvalidPin,
      start: 16,
      back: 9,
      left_stick: PinConstants.InvalidPin,
      right_stick: PinConstants.InvalidPin,
      LB: 8,
      RB: PinConstants.InvalidPin,
      home: PinConstants.InvalidPin,
      unused: PinConstants.InvalidPin,
      a: 4,
      b: 5,
      x: 6,
      y: 7,
      lt: PinConstants.InvalidPin,
      rt: PinConstants.InvalidPin,
      l_x: 19,
      l_y: 20,
      r_x: 18,
      r_y: PinConstants.InvalidPin,
      mpu_6050_interrupt: 10,
   },
   mpu_6050_orientation: GyroOrientation.NegativeX,
   frets_led_mode: true,
   map_joy_to_dpad: true,
   inversions: {
      lt: false,
      rt: false,
      l_x: false,
      l_y: false,
      r_x: false,
      r_y: false,
   },
   threshold_trigger: 12767,
   threshold_joy: 12767,
   keys: {
      up: 0x04,
      down: 0x16,
      left: 0x0d,
      right: 0x0e,
      start: 0x0f,
      back: 0x33,
      left_stick: 0x28,
      right_stick: 0x0b,
      LB: 0x50,
      RB: 0x4f,
      home: 0x52,
      a: 0x51,
      b: 0x51,
      x: PinConstants.InvalidPin,
      y: PinConstants.InvalidPin,
      lt: PinConstants.InvalidPin,
      rt: PinConstants.InvalidPin,
      l_x: {
         neg: PinConstants.InvalidPin,
         pos: PinConstants.InvalidPin,
      },
      l_y: {
         neg: PinConstants.InvalidPin,
         pos: PinConstants.InvalidPin,
      },
      r_x: {
         neg: PinConstants.InvalidPin,
         pos: PinConstants.InvalidPin,
      },
      r_y: {
         neg: PinConstants.InvalidPin,
         pos: PinConstants.InvalidPin,
      },
   },
   cpu_freq: -1,
   signature: DeviceType.Guitar,
};
